<Introduction>
Run the following cell to load your data and some utility functions.

****************
import pandas as pd

reviews = pd.read_csv("../input/wine-reviews/winemag-data-130k-v2.csv", index_col=0)

from learntools.core import binder; binder.bind(globals())
from learntools.pandas.data_types_and_missing_data import *
print("Setup complete.")

Setup complete.
****************

<Exercise 1>
What is the data type of the points column in the dataset?

****************
# Your code here
dtype = reviews.points.dtype

# Check your answer
q1.check()
dtype

Correct

dtype('int64')

q1.hint()
q1.solution()

Hint:
dtype is an attribute of a DataFrame or Series.

Solution:
dtype = reviews.points.dtype
****************

<Exercise 2>
Create a Series from entries in the points column, but convert the entries to strings.
(Hint: Strings are str in native Python)

****************
point_strings = reviews.points.astype('str')

# Check your answer
q2.check()
point_strings

Correct

0         87
1         87
2         87
3         87
4         87
          ..
129966    90
129967    90
129968    90
129969    90
129970    90
Name: points, Length: 129971, dtype: object

q2.hint()
q2.solution()

Hint:
Convert a column of one type to another by using the astype function.

Solution:
point_strings = reviews.points.astype(str)
****************

<Exercise 3>
Sometimes the price column is null. How many reviews in the dataset are missing a price?

****************
missing_price_reviews = reviews[reviews.price.isnull()]
n_missing_prices = len(missing_price_reviews)

# Check your answer
q3.check()
n_missing_prices

Correct

8996

q3.hint()
q3.solution()

Hint:
Use pd.isnull().

Solution:
missing_price_reviews = reviews[reviews.price.isnull()]
n_missing_prices = len(missing_price_reviews)
# Cute alternative solution: if we sum a boolean series, True is treated as 1 and False as 0
n_missing_prices = reviews.price.isnull().sum()
# or equivalently:
n_missing_prices = pd.isnull(reviews.price).sum()
****************

<Exercise 4>
What are the most common wine-producing regions? Create a Series counting the number of times each value occurs in the region_1 field. This field is often missing data, so replace
missing values with Unknown. Sort in descending order. Your output should look something like this:

Unknown                    21247
Napa Valley                 4480
                           ...  
Bardolino Superiore            1
Primitivo del Tarantino        1
Name: region_1, Length: 1230, dtype: int64

****************
reviews_per_region = reviews.region_1.fillna('Unknown').value_counts().sort_values(ascending=False)

# Check your answer
q4.check()
reviews_per_region

Correct

region_1
Unknown                 21247
Napa Valley              4480
Columbia Valley (WA)     4124
Russian River Valley     3091
California               2629
                        ...  
Offida Rosso                1
Corton Perri√®res            1
Isle St. George             1
Geelong                     1
Paestum                     1
Name: count, Length: 1230, dtype: int64

q4.hint()
q4.solution()

Hint:
Use fillna(), value_counts(), and sort_values().

Solution:
reviews_per_region = reviews.region_1.fillna('Unknown').value_counts().sort_values(ascending=False)
****************
